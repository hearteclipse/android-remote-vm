services:
  # PostgreSQL database for session and user management
  postgres:
    image: postgres:15-alpine
    container_name: vmi-postgres
    environment:
      POSTGRES_DB: vmi_db
      POSTGRES_USER: vmi_user
      POSTGRES_PASSWORD: vmi_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - vmi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vmi_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: vmi-redis
    ports:
      - "6379:6379"
    networks:
      - vmi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vmi-backend
    privileged: true
    ports:
      - "8000:8000"
      - "49152-49252:49152-49252/udp" # WebRTC UDP ports
    environment:
      - DATABASE_URL=postgresql://vmi_user:vmi_password@postgres:5432/vmi_db
      - REDIS_URL=redis://redis:6379
      - ANDROID_NETWORK=vmi-network
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DOCKER_TLS_VERIFY=
      - DOCKER_CERT_PATH=
      - WEBRTC_PUBLIC_IP=34.42.79.210
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ./backend:/app
    devices:
      - /dev/kvm:/dev/kvm
    group_add:
      - "kvm"
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp=unconfined
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - vmi-network
    restart: unless-stopped
    user: root

  # Android Emulator service
  emulator:
    build:
      context: ./android
      dockerfile: Dockerfile
    container_name: vmi-emulator
    privileged: true
    ports:
      - "5554:5554"
      - "5555:5555"
      - "50000:50000"
    environment:
      - DEVICE=Pixel_7_Pro
      - EMULATOR_ARGS=-no-window -no-boot-anim -no-audio -gpu swiftshader_indirect
      - ADB_PORT=5555
      - WEBRTC_PORT=50000
    devices:
      - /dev/kvm:/dev/kvm
    group_add:
      - "kvm"
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp=unconfined
    networks:
      - vmi-network
    restart: unless-stopped
    depends_on:
      - backend

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: vmi-nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./client/web:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - vmi-network
    restart: unless-stopped

networks:
  vmi-network:
    driver: bridge

volumes:
  postgres_data:
